spNNGP
4
q()
n
x
y
class(x)
is.numeric(y)
is.numeric(x)
names(theta.alpha)
as.matrix(theta.alpha)
t(as.matrix(theta.alpha))
names(t(as.matrix(theta.alpha)))
colnames(t(as.matrix(theta.alpha)))
q()
n
()
n
q()
n
m.1
names(m.1)
class(m.1$ab)
calss(m.1$beta)
class(m.1$beta)
is.vector(theta.alpha)
dim(theta.alpha)
a <- t(as.matrix(theta.alpha))
dim(a)
t(a)
as.matrix(a)
out
m.1
tau.sq/sigma.sq
plot(y, x%*%B + w)
plot(y, x%*%B)
plot(y, x%*%B)
4
dim(m.1$y.hat)
tau.sq/sigma.sq
dim(x)
q
q()
getwd()
setwd("/home/andy/Rdevel/R-NNGP/devel
")
setwd("/home/andy/Rdevel/R-NNGP/devel")
phi
dim(m.1$y.hat)
names(m.1)
m.1$k.fold.scores
class(m.1)
ncol(x)
ncol(m.2$x)
ncol(m.2$X)
names(m.1)
ncol(m.1$X)
class(m.1$X)
is.matrix(m.1$X)
x
is.matix(m.1$X)
is.matrix(m.1$X)
plot(apply(a$p.y0, 1, mean), apply(b$p.y0, 1, mean))
phi
plot(a,b)
cbind(a,b)
plot(apply(a$p.y0, 1, mean), y.ho)
plot(apply(a$p.y0, 1, mean), y.ho)
q()
n
q()
n
q()
n
q*(
q()
q()
()
q()
n
q()
n
m.c.b$k.fold.scores
out$sigma.sq.hat
beta.var
upper.tri(beta.var, FALSE)
t(beta.var)[lower.tri(beta.var, FALSE)]
colnames(beta.var) <- c("a","b","c")
rownames(beta.var) <- c("a","b","c")
beta.var
q()
n
q()
n
5 < NA
q()
n
